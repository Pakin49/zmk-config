#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

// Define layers
#define NAV 1
#define NUM  2
#define SYM 3
#define FUN 4

// Home row mods macro
#define HRML(k1,k2,k3,k4) &hml LGUI k1  &hml LALT k2  &hml LCTRL k3  &hml LSHFT k4
#define HRMR(k1,k2,k3,k4) &hmr RSHFT k1  &hmr RCTRL k2  &hmr RALT k3  &hmr RGUI k4
/ {
    behaviors {
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&mo>, <&kp>;
            quick-tap-ms = <175>;
        };

        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-on-release;
        };
        //I used for prior version of mod tap
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>; // ignore mod tap interrupt
            bindings = <&kp>, <&kp>; 
        };
    };
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <2 7>;
            bindings = <&kp ESC>;
            require-prior-idle-ms = <100>;
        };
        combo_capword{
            timeout-ms = <50>;
            key-positions = <3 6>;
            bindings = <&caps_word>;
            require-prior-idle-ms = <100>;
        };
        combo_caplock {
            timeout-ms = <50>;
            key-positions = <1 8>;
            bindings = <&kp CAPS>;
            require-prior-idle-ms = <100>;
        };
        combo_delete{
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp DEL>;
            require-prior-idle-ms = <100>;
        };
    };
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
                //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
                //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │   P      │
                    &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P 
                //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │  ; :     │
                    HRML(A,        S,         D,         F)     &kp G          &kp H      HRMR(J,        K,      L  ,        SEMI)
                //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │ / ?      │
                    &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH
                //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                               &lt NAV TAB  &lt NUM SPACE       &lt SYM ENTER &lt FUN BSCP
                //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
         
        navigation_layer {
            bindings = <
                //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
                //│          │          │          │          │          │   │          │  HOME    │  PG_DN   │ PG_UP    │  END     │
                    &none       &none     &none      &none      &none          &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &none      
                //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                //│          │          │          │          │          │   │          │   left   │  down    │   up     │  right   │
                    &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT  &none          &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT &none      
                //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                //│          │          │          │          │          │   │          │          │          │  │       │          │
                    &none       &none     &none      &none      &none      &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT  &none    
                //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                                     &none     &none        &mkp LCLK  &mkp RCLK
            //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };       
        
        number_layer {
            bindings = <
                //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
                //│          │          │          │          │          │   │          │    7     │    8     │   9      │   /      │
                    &none       &none      &none      &none      &none         &kp ASTRK       &kp N7    &kp N8     &kp N9     &kp SLASH 
                //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                //│          │          │          │          │          │   │   -      │    4     │    5     │   6      │    =     │
                    &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT  &kp EQUAL          &kp MINUS  &kp N4     &kp N5     &kp N6     &kp EQUAL
                //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                //│          │          │          │          │          │   │    +     │    1     │    2    │    3      │   .    │
                     &none     &none      &none      &none       &kp UNDER         &kp PLUS   &kp N1     &kp N2     &kp N3     &kp DOT
                //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                                     &none      &none           &kp N0     &kp DOT
                //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        symbol_layer {
            bindings = <
                //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
                //│     !    │    @     │    #     │    $     │    %     │   │    ^     │    &     │     *    │    |     │    \     │
                    &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT      &kp CARET  &kp AMPS   &kp ASTRK  &kp PIPE   &kp BSLH
                //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                //│  !       │  @       │  #       │  $       │  %       │   │         │  -       │  =       │  \       │  `       │
                    &kp TILDE  &kp LBKT   &kp LPAR   &kp LBRC   &kp EQUAL      &kp PLUS      &kp RSHFT  &kp RCTRL  &kp RALT   &kp RGUI
                //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                //│          │          │          │          │          │   │          │          │          │          │          │
                    &kp GRAVE  &kp RBKT   &kp RPAR   &kp RBRC   &kp UNDER      &kp MINUS      &none      &none      &none       &none
                //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                                     &kp SQT     &kp DQT         &none     &none
                //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        function_layer {
            bindings = <
                //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
                //│          │          │          │          │          │   │          │          │          │          │          │
                   &kp F1      &kp F2     &kp F3     &kp F4     &kp F5         &kp F6      &kp F7     &kp F8     &kp F9     &kp F10
                //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                //│BOOTLOADER│          │          │          │          │   │          │          │          │          │          │
                     &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT &kp C_VOL_UP        &kp PSCRN    &kp RSHFT   &kp RCTRL  &kp RALT  &kp RGUI
                //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                //│          │          │          │          │          │   │          │          │          │          │          │
                   &kp F11   &kp F12    &kp C_PREV &kp C_NEXT &kp C_VOL_DN    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &out OUT_TOG  &bt BT_CLR
                //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                                     &none      &kp C_PP        &none      &none 
                //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
    };
};
